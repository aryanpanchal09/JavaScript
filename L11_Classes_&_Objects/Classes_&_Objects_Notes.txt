CLASSES & OBJECTS 
-----------------
CLASS : A class is a blueprint for creating objects. It defines the properties and methods that the objects created from the class will have. Classes were introduced in ES6 (ECMAScript 2015) to make object-oriented programming easier.

OBJECTS : An object is an instance of a class. It contains the properties and methods defined by the class.

PROTOTYPES IN JS
----------------
A javascript object is an entity having state and behaviour (properties and method)
JS objects have a special property called prototype 
We can set prototype using __proto__ 

*If object & prototype have same method, object's method will be used

CLASSES IN JS
-------------
Class is a program-code template for creating objects 
Those objects will have some state (variables) & some behaviour (functions) inside it 

class MyClass{
    constructor() {...}
    myMethod() {...}
}

let myObj = new MyClass();

CONSTRUCTOR 
-----------
Constructor() method is 
- automatically invoked by new 
- initializes object 

- new keyword find the constructor if not find then it automatically creates constructor 

class MyClass {
    constructor() {...}
    myMethod() {...}
}

INHERITANCE IN JS 
-----------------
inheritance is passing down properties & methods from parent class to child class 

class Parent {

}

class Child extends Parent {

}

If Child & Parent have same method, child's method will be used. [Method Overriding]

SUPER KEYWORD 
-------------
The super keyword is used to call the constructor of its parent class to access the parent's properties and methods 

super(args) // calls parent's constructor 

super.parentMethod(args)