DOM - Document Object Model 
HTML 
----
Head - Website Name
Body - Content Tags
Link - extra information is attributes [Ex : <link rel="stylesheet" href="style.css">]
 
Advantages 
----------
Readability - Helpful in Code Review
Modular - Divide the code into different parts 
Browser Caching - Loading Time Faster

WINDOW OBJECT
-------------
The window object represents an open window in a browser. It is browser's object(not js) & is automatically created by browser.
It's a global object with lots of properties & methods.

Document Object Model - When a web page is loaded, the browser creates a Document Object Model of the page

Html code transfrom into object in js file -> document object -> Window object
Html code is available in document object & document object is available in window object 

CONSOLE
--------
window
window.document 
window.dir -> special objects like document its properties & method print / to print oject we use window.dir not console.log(window.document)
console.log(window.document)

Document - model / representation of html code

DYNAMICALLY CHANGE WEBSITE HTML CODE
------------------------------------
document.body.style.background = "green";
document.body.childNodes[1].innerText="abcd";

DOM MANIPULATION 
----------------
Selecting with id 
- document.getElementById("myId")
- for id use # - to be unique for each element
- when search for id that doesn't exist we get null result 

Selecting with class 
- document.getElementsByClassName("myClass")
- for class use .
- returns HTMl collection - which is similar to Array
- when search for class that doesn't exist we get empty html array

Selecting with tag 
- document.getElementsByTagName("p")

Query Selector 
- document.querySelector("myId / myClass / tag")
- returns first element

- document.querySelectorAll("myId / myClass /tag")
- returns a NodeList

* DOM Tree each and every element become a node

* If we write our script tag in head then we won't be able to access our Html body - It will return null - that's why we have to write it just before closing of body tag

PROPERTIES - we can get,set(update),change element
----------
tagName : returns tag for element nodes 
Ex - submit.tagName 

innerText : returns the text content of the element and all its children

innerHTML : returns the plain text or HTML contents in the element 
- *Difference Between innerText & innerHTMl is innerText will only return the text while the innerHTML will also return the HTML tags related to element

textContent : returns textual content even for hidden elements
- Dynamically change the web content 

*children - tree like structure in dom where the parent tag is the main tag then the element in branch is known as child tag creates a hierarchy of structure

Parent - Child - Sibling(on same level) - Descendants

Nodes properties : 
------------------
fristChild property 
- The read-only fristChild property of the Node interface returns the node's first child in the tree, or null if the node has no children.
- If the node is a Document, this property returns the first node in the list of its direct children 

lastChild property 
- The read-only lastChild property of the Node interface returns the last child of the node, or null if there are no child nodes 

Example : 
---------
document.querySelector("div")
document.querySelector("div").children;

div.innerText 
div.innerHTML 

div.innerText = "abcd";
div.innerHTML = "<div>innerHTML<div>"

div.textContent;

DOM TREE NODES TYPES 
--------------------
. Text Nodes 
. Comment Nodes 
. Elements Nodes - Mostly used 
